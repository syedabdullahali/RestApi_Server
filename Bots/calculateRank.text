 const calculateUserRankings = async (contestId, timeSlot,prize,rank) => {

    // console.log("prize",prize)
    // console.log("rank",rank)

    try {
      const userContestDetails = await userMainContestDetail.find({
        contestId: contestId,
        timeslotId: timeSlot,
      });

      const bidCountMap = new Map();
      userContestDetails.forEach((user) => {
        user.bids.forEach((bid) => {
          const amount = bid.Amount;
          bidCountMap.set(amount, (bidCountMap.get(amount) || 0) + 1);
        });
      });

      const usersData = userContestDetails.map((user) => {
        let totalBidAmount = 0;
        let uniqueBidCount = 0;
        user.bids.forEach((bid) => {
          const amount = bid.Amount;
          totalBidAmount += amount;

          if (bidCountMap.get(amount) === 1) {
            uniqueBidCount++;
          }
        });

        return {
          userId: user.userId,
          totalBidAmount,
          uniqueBidCount,
          winningAmount: 0,
        };
      });

      usersData.sort((a, b) => {
        if (b.totalBidAmount !== a.totalBidAmount) {
          return b.totalBidAmount - a.totalBidAmount;
        }
        return b.uniqueBidCount - a.uniqueBidCount;
      });

      const rankings = [];
      let currentRank = 1;
      let prevUser = null;

      usersData.forEach((user) => {
        if (
          prevUser &&
          (prevUser.totalBidAmount !== user.totalBidAmount ||
            prevUser.uniqueBidCount !== user.uniqueBidCount)
        ) {
          currentRank++;
        }

        let rankEntry = rankings.find((r) => r.rank === currentRank);
        if (!rankEntry) {
          rankEntry = { rank: currentRank, users: [] };
          rankings.push(rankEntry);
        }

        rankEntry.users.push({
          userId: user.userId,
          totalBidAmount: user.totalBidAmount,
          uniqueBidCount: user.uniqueBidCount,
          winningAmount: 0,
        });

        prevUser = user;
      });


      console.log(rankings)

      return rankings;
    } catch (error) {
      console.error("Error calculating rankings:", error);
      throw error;
    }
  };